(async () => {
        const abi = [
            {
                "inputs": [],
                "stateMutability": "nonpayable",
                "type": "constructor"
            },
            {
                "anonymous": false,
                "inputs": [
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "oldOwner",
                        "type": "address"
                    },
                    {
                        "indexed": true,
                        "internalType": "address",
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "OwnerSet",
                "type": "event"
            },
            {
                "inputs": [
                    {
                        "internalType": "address",
                        "name": "newOwner",
                        "type": "address"
                    }
                ],
                "name": "changeOwner",
                "outputs": [],
                "stateMutability": "nonpayable",
                "type": "function"
            },
            {
                "inputs": [],
                "name": "getOwner",
                "outputs": [
                    {
                        "internalType": "address",
                        "name": "",
                        "type": "address"
                    }
                ],
                "stateMutability": "view",
                "type": "function"
            }
        ]
        var Web3 = require('web3');
        let web3 = new Web3(new Web3.providers.HttpProvider("http://127.0.0.1:8545"));
        for (const key in web3.eth) {
            if (web3.eth.hasOwnProperty(key)) {
              console.log(`${key}: ${web3.eth[key]}`);
            }
          }
        console.log("--------------------");
        const contractAddress = '0xd8b934580fcE35a11B58C6D73aDeE468a2833fa8'
        
        // instantiate a new web3 Contract object
        let contract = new web3.eth.Contract(abi)
        // call the autogenerated function to return the value of a public state variable
        let name = await contract.methods.book_fee().call()
        // log it to the remix console
        console.log(name)
        console.log(error);
  
    
    

})()
